{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","height","width","display","justifyContent","alignItems","zIndex","box","boxShadow","shadows","background","backgroundImage","position","top","right","left","bottom","maxHeight","backgroundSize","transition","centered","textAlign","App","classes","useState","blur","setBlur","useEffect","className","style","filter","Card","Grid","container","justify","xs","Typography","variant","TextField","label","inputProps","Button","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","client","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOAKMA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJC,OAAQ,QACRC,MAAO,QACPC,QAAS,OACTC,eAAgB,SAChBC,WAAY,SACZC,QAAS,GAEXC,IAAK,CACHN,OAAQ,MACRC,MAAO,MACPM,UAAWT,EAAMU,QAAQ,KAE3BC,WAAY,CACVC,gBAAiB,oHACjBC,SAAU,WACVC,IAAK,EACLC,MAAO,EACPC,KAAM,EACNC,OAAQ,EACRC,UAAW,OACXC,eAAgB,QAChBZ,QAAS,EACTa,WAAY,cAEdC,SAAU,CACRC,UAAW,cAgCAC,MA7Bf,WACE,IAAMC,EAAU1B,IADH,EAEW2B,mBAAS,GAFpB,mBAENC,EAFM,KAEAC,EAFA,KAMb,OAHAC,qBAAU,WACRD,EAAQ,KACP,IAED,sBAAKE,UAAWL,EAAQvB,KAAxB,UACE,qBAAK4B,UAAWL,EAAQb,WAAYmB,MAAO,CAAEC,OAAO,QAAD,OAAUL,EAAV,UACnD,cAACM,EAAA,EAAD,CAAMH,UAAWL,EAAQhB,IAAzB,SACE,cAACyB,EAAA,EAAD,CAAMH,MAAO,CAAE5B,OAAQ,QAAUgC,WAAS,EAACC,QAAQ,SAAS7B,WAAW,SAAvE,SACE,cAAC2B,EAAA,EAAD,CAAMC,WAAS,EAACE,GAAI,GAAI9B,WAAW,SAAS6B,QAAQ,SAApD,SACE,eAACF,EAAA,EAAD,CAAMG,GAAI,GAAV,UACE,cAACC,EAAA,EAAD,CAAYR,UAAWL,EAAQH,SAAUiB,QAAQ,KAAjD,0BAGA,cAACL,EAAA,EAAD,CAAMC,WAAS,EAACE,GAAI,GAAI9B,WAAW,SAAS6B,QAAQ,SAApD,SACE,cAACI,EAAA,EAAD,CAAWC,MAAM,OAAOC,WAAY,CAAEX,MAAO,CAAER,UAAW,eAE5D,cAACW,EAAA,EAAD,CAAMC,WAAS,EAACE,GAAI,GAAI9B,WAAW,SAAS6B,QAAQ,SAApD,SACE,cAACO,EAAA,EAAD,CAAQC,MAAM,UAAd,2CCzCDC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,QCDRQ,G,OAAS,IAAIC,eAAa,CAC9BC,IAAK,WACLC,MAAO,IAAIC,mBAGbC,IAASC,OACP,cAAC,iBAAD,CAAgBN,OAAQA,EAAxB,SACE,cAAC,IAAMO,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BlB,K","file":"static/js/main.8bef5992.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { Box, Button, Card, Grid, Input, TextField, Toolbar, Typography } from \"@material-ui/core\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    height: \"100vh\",\n    width: \"100wh\",\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    zIndex: -1,\n  },\n  box: {\n    height: \"60%\",\n    width: \"60%\",\n    boxShadow: theme.shadows[24],\n  },\n  background: {\n    backgroundImage: \"url(https://cdn.sixtyandme.com/wp-content/uploads/2018/06/Sixty-and-Me_3-Ways-to-Keep-Having-Fun-in-Your-60s.jpg)\",\n    position: \"absolute\",\n    top: 0,\n    right: 0,\n    left: 0,\n    bottom: 0,\n    maxHeight: \"100%\",\n    backgroundSize: \"cover\",\n    zIndex: -1,\n    transition: \"all 1000ms\",\n  },\n  centered: {\n    textAlign: \"center\",\n  },\n}));\nfunction App() {\n  const classes = useStyles();\n  const [blur, setBlur] = useState(6);\n  useEffect(() => {\n    setBlur(2);\n  }, []);\n  return (\n    <div className={classes.root}>\n      <div className={classes.background} style={{ filter: `blur(${blur}px)` }} />\n      <Card className={classes.box}>\n        <Grid style={{ height: \"100%\" }} container justify=\"center\" alignItems=\"center\">\n          <Grid container xs={12} alignItems=\"center\" justify=\"center\">\n            <Grid xs={12}>\n              <Typography className={classes.centered} variant=\"h4\">\n                Enter a code\n              </Typography>\n              <Grid container xs={12} alignItems=\"center\" justify=\"center\">\n                <TextField label=\"Code\" inputProps={{ style: { textAlign: \"center\" } }} />\n              </Grid>\n              <Grid container xs={12} alignItems=\"center\" justify=\"center\">\n                <Button color=\"primary\">Create session</Button>\n              </Grid>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Card>\n    </div>\n  );\n}\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\nimport 'fontsource-roboto'\n\nconst client = new ApolloClient({\n  uri: \"/graphql\",\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <ApolloProvider client={client}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </ApolloProvider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}